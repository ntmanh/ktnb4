## Oracle DS
hibernate.dialect org.hibernate.dialect.OracleDialect
hibernate.show_sql true
hibernate.connection.provider_class org.hibernate.connection.DatasourceConnectionProvider
hibernate.transaction.auto_close_session false

hibernate.connection.datasource jdbc/ktnbDS
hibernate.session_factory_name HibernateSessionFactory
hibernate.jndi.class com.ibm.websphere.naming.WsnInitialContextFactory
jta.UserTransaction java:comp/UserTransaction
#jta.UserTransaction thisNode/servers/WebSphere_Portal/jta/usertransaction

## to use the second-level cache with JTA, Hibernate must be able to obtain the JTA TransactionManager
hibernate.transaction.factory_class org.hibernate.transaction.JTATransactionFactory
hibernate.transaction.manager_lookup_class org.hibernate.transaction.WebSphereTransactionManagerLookup
#hibernate.transaction.manager_lookup_class org.hibernate.transaction.WebSphereExtendedJTATransactionLookup


hibernate.format_sql false
## specify a default schema and catalog for unqualified tablenames
hibernate.default_schema KTNB_OWNER

## set the maximum depth of the outer join fetch tree
hibernate.max_fetch_depth 0

## set the default batch size for batch fetching
hibernate.default_batch_fetch_size 40

### Second-level Cache ###
## optimize chache for minimal "puts" instead of minimal "gets" (good for clustered cache)

#hibernate.cache.use_minimal_puts true

## set a prefix for cache region names
#hibernate.cache.region_prefix hibernate.test
## disable the second-level cache
hibernate.cache.use_second_level_cache true
## enable the query cache
#hibernate.cache.use_query_cache true
## store the second-level cache entries in a more human-friendly format
hibernate.cache.use_structured_entries true
## choose a cache implementation
hibernate.cache.provider_class org.hibernate.cache.EhCacheProvider
